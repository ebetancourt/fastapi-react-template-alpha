version: "3.3"
services:
    db:
        image: ankane/pgvector
        volumes:
            - ./.docker/postgres/data:/var/lib/postgresql/data/pgdata
        env_file:
            - .env
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata

    pgadmin:
        image: dpage/pgadmin4
        depends_on:
            - db
        env_file:
            - .env

    backend:
        depends_on:
            - db
        env_file:
            - .env
        environment:
            - SERVER_NAME=${DOMAIN?Variable not set}
            - SERVER_HOST=https://${DOMAIN?Variable not set}
            # Allow explicit env var override for tests
            - SMTP_HOST=${SMTP_HOST}
        build:
            context: ./backend
            dockerfile: backend.dockerfile

    queue:
        image: rabbitmq:3
        # Using the below image instead is required to enable the "Broker" tab in the flower UI:
        # image: rabbitmq:3-management
        #
        # You also have to change the flower command

    flower:
        image: mher/flower:0.9.7
        networks:
            - default
        env_file:
            - .env
        command:
            - "--broker=amqp://guest@queue:5672//"
            # For the "Broker" tab to work in the flower UI, uncomment the following command argument,
            # and change the queue service's image as well
            # - "--broker_api=http://guest:guest@queue:15672/api//"
    celeryworker:
        depends_on:
            - db
            - queue
        env_file:
            - .env
        build:
            context: ./backend
            dockerfile: celeryworker.dockerfile
        environment:
          - SERVER_NAME=${DOMAIN?Variable not set}
          - SERVER_HOST=https://${DOMAIN?Variable not set}
        # Allow explicit env var override for tests
        # - SMTP_HOST=${SMTP_HOST?Variable not set}

    frontend:
        build:
            context: ./frontend
            args:
                FRONTEND_ENV: ${FRONTEND_ENV-production}

volumes:
    app-db-data:

networks:
    traefik-public:
        # Allow setting it to false for testing
        external: true
