version: "3.3"
services:

  db:
    image: postgres:12
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    env_file:
      - .env

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    # deploy:
    #   labels:
    #     - traefik.enable=true
    #     - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
    #     - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
    #     - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=80

  # celeryworker:
  #   image: '${DOCKER_IMAGE_CELERYWORKER?Variable not set}:${TAG-latest}'
  #   depends_on:
  #     - db
  #     - queue
  #   env_file:
  #     - .env
  #   environment:
  #     - SERVER_NAME=${DOMAIN?Variable not set}
  #     - SERVER_HOST=https://${DOMAIN?Variable not set}
  #     # Allow explicit env var override for tests
  #     - SMTP_HOST=${SMTP_HOST?Variable not set}
  #   build:
  #     context: ./backend
  #     dockerfile: celeryworker.dockerfile
  #     args:
  #       INSTALL_DEV: ${INSTALL_DEV-false}

  frontend:
    image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
    build:
      context: ./frontend
      args:
        FRONTEND_ENV: ${FRONTEND_ENV-production}
    # deploy:
    #   labels:
    #     - traefik.enable=true
    #     - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
    #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=PathPrefix(`/`)
    #     - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=80

volumes:
  app-db-data:

networks:
  traefik-public:
    # Allow setting it to false for testing
    external: true
